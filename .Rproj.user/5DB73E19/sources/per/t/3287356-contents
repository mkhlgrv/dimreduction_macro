source("code/lib.R")
wbsources()[44,]
wbstats::wbsearch("GDP per capita")
c("NY.GDP.PCAP.KD.ZG","NY.GDP.PCAP.KD")
data1 <- wb(indicator = c("NY.GDP.PCAP.KD.ZG","NY.GDP.PCAP.KD"),
   startdate = 2012,
   enddate = 2017,
   freq = "Y")
data1.1 <- data1 %>%
  select("iso3c", "country", "indicatorID", "date", "value") %>%
  as.data.table() %>%
  dcast.data.table(iso3c + country + date~ indicatorID) %>%
  group_by(iso3c, country) %>%
  arrange(date) %>%
  summarise(g = prod(NY.GDP.PCAP.KD.ZG/100+1)^(1/8) - 1,
            G = log(NY.GDP.PCAP.KD[1]))
p1 <- ggplot(data = data1.1, aes(x = G, y = g)) +
  scale_y_continuous(labels = scales::percent) +
  xlab("GDP per capita, 2012") +
  ylab(TeX("Growth, $2012 \U2013 2017$")) +
  geom_point()
model1 <- lm(formula = g~G, data = data1.1)
summary(model1)
model1$fitted.values


stargazer(model1, model1, title="Regression Results",
          dep.var.labels=c("Overall Rating","High Rating"),
          covariate.labels=c("Handling of Complaints"),
          omit.stat=c("LL","ser","f"),
          ci=TRUE,
          ci.level=0.95,
          single.row=TRUE)
p2 <- p1+geom_smooth(method = "lm")

#data2
data2 <- data.frame()
system.time({for(i in indicators$indicatorID[10:18]) {
  data2 <- bind_rows(data2,try(wb(indicator = i,
                                  startdate = 2012, enddate = 2012, freq = "Y")) )
}})
system.time({data2 <- indicators$indicatorID %>%
    map_dfr(function(i) try(wb(indicator = i,
                  startdate = 2012, enddate = 2012, freq = "Y")))})
indicators <- wb_cachelist$indicators %>% filter(sourceID == "2")
data2 <- wb(indicator = indicators, startdate = 2000, enddate = 2017, freq = "Y")
