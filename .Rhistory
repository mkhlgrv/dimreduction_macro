for(i in indicators$indicatorID[10:18]) {
data2 <- bind_rows(data2,try(wb(indicator = i,
startdate = 2012, enddate = 2017, freq = "Y")) )
}
data2$indicatorID %>% unique
system.time({for(i in indicators$indicatorID[10:18]) {
data2 <- bind_rows(data2,try(wb(indicator = i,
startdate = 2012, enddate = 2017, freq = "Y")) )
}})
View(data2)
system.time({for(i in indicators$indicatorID[10:18]) {
data2 <- bind_rows(data2,try(wb(indicator = i,
startdate = 2012, enddate = 2012, freq = "Y")) )
}})
system.time({indicators$indicatorID[10:18] %>%
map_dfr(function(i) try(wb(indicator = i,
startdate = 2012, enddate = 2012, freq = "Y")))})
system.time({data2 <- indicators$indicatorID %>%
map_dfr(function(i) try(wb(indicator = i,
startdate = 2012, enddate = 2012, freq = "Y")))})
View(data2)
rm(list =ls())
suppressMessages(source("code/lib.R"))
readme <- readLines("data/barrolee/readme.txt")[-c(1:716)]
firstlines <- which(grepl(".prn",readme))
countries <- readLines("data/barrolee/readme.txt")[c(565:702)] %>%
gsub(pattern = " {2,}", replacement = "  ", x = .) %>%
gsub(pattern = "^ ", replacement = "", x = .) %>%
strsplit(split = "  ") %>%
do.call(what =rbind, args = .) %>%
as.data.frame() %>%
set_names(c("SHCODE", "COUNTRY  NAME", "WBCTRY", "SMPL98", "SMPL97"))
get.names.BL <- function(x, i) {
if(!is.na(firstlines[i+1])) {
data.frame(File = word(readme[x]),
Colname = (c(readme[x:(firstlines[i+1]-1)]) %>%
paste(collapse = " ") %>%
gsub(pattern = ".{1,}: {1,}", replacement = "", x = .) %>%
gsub(pattern = " {2,}", replacement = " ", x = .) %>%
gsub(pattern = "^ | $", replacement = "", x = .) %>%
strsplit(split = " ") %>%
unlist
)
)
} else {
data.frame(File = word(readme[x]),
Colname = (c(readme[x:length(readme)]) %>%
paste(collapse = " ") %>%
gsub(pattern = ".{1,}: {1,}", replacement = "", x = .) %>%
gsub(pattern = " {2,}", replacement = " ", x = .) %>%
gsub(pattern = "^ | $", replacement = "", x = .) %>%
strsplit(split = " ") %>%
unlist
)
)
}
}
set.seed(1)
file_colname <- imap_dfr(firstlines, get.names.BL)
set.names.BL <- function(x){
read.table(paste0("data/barrolee/",x$File[1])) %>%
purrr::set_names(x$Colname)
}
df <- file_colname %>%
split(.$File) %>%
map_dfc(set.names.BL) %>%
mutate(WBCTRY = as.character(countries$WBCTRY)) #%>%
# t()
#which(names(df) == "grsh56a")
# 158
#which(file_colname$Colname=="grsh56a")
# 42
names(df)[158] <- file_colname$Colname[42] <- "grsh57"
#which(names(df) == "bmp2ml")
# 8
#which(file_colname$Colname=="bmp2ml")
# 538
names(df)[7:12] <-  file_colname$Colname[537:542] <- paste0("bmpl", c(1:6))
df_list <- list()
df_list[[1]] <- df %>%
select(matches("[a-z][0-9]{1}$|grsh5|invsh5|invsh4|
grsh4|govsh4|govsh5|gvxdxe4|gvxdxe5"),
-durs1)
df_list[[2]] <- df %>%
select(matches("[a-z][0-9]{2}$|gdpsh5|gdpsh4|pop15|pop65|lifee0|pysh5|pcsh5|pish5|pgsh5"),
-c(matches("grsh5|invsh5|invsh4|
grsh4|govsh4|govsh5|gvxdxe4|gvxdxe5|smpl97")
))
df_list[[3]] <- df %>%
select(names(df)[which(!names(df) %in% c(names(df_list[[1]]), names(df_list[[2]])))])
# с одной цифрой или просто плохие
# INVWBx GRWBx INVSH5x GRSH5x
# INVSH4x GRSH4x
# POP15xx
# GOVSH4x GOVSH5x GDEx GEERECx GEETOTx
# INVPUBx GGCFDx GVXDXE4x GVXDXE5x PINSTABx ASSASSPx
# COUPx REVOLx PINSTABx POLRIGHTx CIVLIBx EXx
# IMx BMPx TOTx LLYx
# SMPL97 DURS1
# GDPSH4xx GDPSH5xx POP65xx
# Type xx for date indicators, x for averagee period indicators, con for constant
cut.colname.BL <- function(df, i) {
if(i == 3) {
i <- 0
}
data.frame(Colname = colnames(df)) %>%
inner_join(file_colname, by = "Colname") %>%
mutate(Colname_cut = substr(Colname, 1,nchar(Colname)-i),
Type = ifelse(i == 2, "xx",
ifelse(i == 1,
"x",
"con"))) %>%
unique() %>%
return()
}
cut_colname_type <- imap_dfr(df_list, cut.colname.BL)
# only for melt xx or x
melt.BL <- function(cn, df, type) {
if(type == "con") {
df1 <- df %>%
select(matches(cn), WBCTRY) %>%
as.data.table() %>%
melt.data.table(id.vars = "WBCTRY",
variable.name = "Indicator",
value.name = "Value") %>%
inner_join(map_dfr(1:9,function(x) tibble(WBCTRY = df$WBCTRY,
Year = as.character(1945+x*5), Type = type)
), by = "WBCTRY")
# сюда добавить год
} else{
df1 <- df %>%
select(matches(paste0("^", cn, "[0-9]{",nchar(type),"}$")), WBCTRY) %>%
as.data.table() %>%
melt.data.table(id.vars = "WBCTRY",
variable.name = "Indicator",
value.name = "Value")
if(type == "xx"){
df1 %>% mutate(Year = paste0("19",
substring(Indicator,
nchar(as.character(Indicator))-1)),
Indicator = substr(Indicator, 1, nchar(as.character(Indicator))-2),
Type = type)
} else{
if(type == "x") {
period_to_year <- c("1" = "65",
"2" ="70",
"3" = "75",
"4" = "80",
"5" = "85",
"6" = "90",
"7" = "89")
df1 %>% mutate(Year = paste0("19",
period_to_year[substring(Indicator,
nchar(as.character(Indicator)))]),
Indicator = substr(Indicator, 1, nchar(as.character(Indicator))-2),
Type = type)
}
}
}
}
BL_long <- bind_rows(map_dfr(cut_colname_type %>% filter(Type == "xx") %>% pull(Colname_cut) %>% unique, melt.BL, df, "xx"),
map_dfr(cut_colname_type %>% filter(Type == "x") %>% pull(Colname_cut) %>% unique, melt.BL, df, "x"),
map_dfr(cut_colname_type %>% filter(Type == "con") %>% pull(Colname_cut) %>% unique, melt.BL, df, "con"))
BL_wide <- BL_long %>%
filter(Type != "con") %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator+Year+Type,
value.var = "Value", fun.aggregate = max) %>% bind_cols(BL_long %>%
filter(Type == "con") %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator,
value.var = "Value",
fun.aggregate = max))
# в cut_colname_type на 1 ед меньше потому что нет WBCTRY
cut_colname_type
cut_colname_type %>% split(.$Colname_cut) %>%
map(lam)
lam <- function(df){
N1 <- nrow(df)
if(df$Type %>% unique == "con"){
N2 <- BL_wide %>%
select(matches(paste0("^",df$Colname_cut %>% unique,"$"))) %>%
names() %>% length
} else{
N2 <- BL_wide %>%
select(matches(paste0("^",df$Colname_cut %>% unique,"_"))) %>%
names() %>% length
}
if(N1 != N2){
print(df$Colname_cut %>% unique)
print(N1-N2)
} else {NA}
}
BL_wide
BL_wide %>% names
BL_wide %>% select(gdpsh4_1980_xx, grsh_1980_x)
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh_1980_x)
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh_1980_x) %>%
mutate(G = log(gdpsh4_1980_xx))
dat1
data1
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh_1980_x) %>%
mutate(G = log(gdpsh4_1980_xx),
g = grsh_1980_x)
model1 <- lm(formula = g~G, data = data1)
p1 <- ggplot(data = data1.1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
summary(model1)
p1+geom_smooth(method = "lm")
p1 <- ggplot(data = data1.1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh_1985_x) %>%
mutate(G = log(gdpsh4_1980_xx),
g = grsh_1980_x)
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh_1985_x) %>%
mutate(G = log(gdpsh4_1980_xx),
g = grsh_1980_x)
model1 <- lm(formula = g~G, data = data1)
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
data1 <- BL_wide %>% select(gdpsh4_1980_xx, grsh4_1980_x) %>%
mutate(G = log(gdpsh4_1980_xx),
g = grsh_1980_x)
View(df)
data1 <- df$g %>% select(gdpsh480, grsh45) %>%
mutate(G = log(gdpsh480),
g = grsh45)
data1 <- df %>% select(gdpsh480, grsh45) %>%
mutate(G = log(gdpsh480),
g = grsh45)
data1
model1 <- lm(formula = g~G, data = data1)
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
data1 <- df %>% select(gdpsh480, grsh44) %>%
mutate(G = log(gdpsh480),
g = grsh44)
model1 <- lm(formula = g~G, data = data1)
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
data1 <- df %>% select(gdpsh480, grsh45) %>%
mutate(G = log(gdpsh480),
g = grsh45)
model1 <- lm(formula = g~G, data = data1)
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
summary(model1)
BL_long
#data2
data2 <- BL_long %>% Year %>% unique
#data2
data2 <- BL_long$Year %>% unique
data2
#data2
data2 <- BL_long %>% filter(Year = 1980)
#data2
data2 <- BL_long %>% filter(Year == 1980)
data2
#data2
data2 <- BL_long %>%
filter(Type != "con") %>%
filter(Year = 1980)
#data2
data2 <- BL_long %>%
filter(Type != "con") %>%
filter(Year == 1980)
data2
data2 <- BL_long %>%
filter(Type != "con") %>%
filter(Year == 1980) %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator+Type,
value.var = "Value", fun.aggregate = max) %>% bind_cols(BL_long %>%
filter(Type == "con") %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator,
value.var = "Value",
fun.aggregate = max))
data2
data2.x <- data2 %>% select(-grsh_x)
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x, data2.y)
data2.y
data2 <- na.omit(data2)
data2 <- data2[!is.na(data2$grsh_x),]
#data2
data2 <- BL_long %>%
filter(Type != "con") %>%
filter(Year == 1980) %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator+Type,
value.var = "Value", fun.aggregate = max) %>% bind_cols(BL_long %>%
filter(Type == "con") %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator,
value.var = "Value",
fun.aggregate = max))
data2 <- data2[!is.na(data2$grsh_x),]
data2.x <- data2 %>% select(-grsh_x)
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x, data2.y)
View(data2.x)
data2.x <- data2 %>% select(-grsh_x) %>% as.matrix()
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x, y= data2.y)
View(data2.x)
data2.x <- data2 %>% select(-grsh_x, WBCTRY) %>% as.matrix()
glmnet(x = data2.x, y= data2.y)
names(data2.x)
#data2
data2 <- BL_long %>%
filter(Type != "con") %>%
filter(Year == 1980) %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator+Type,
value.var = "Value", fun.aggregate = max) %>% bind_cols(BL_long %>%
filter(Type == "con") %>%
as.data.table %>%
dcast.data.table(WBCTRY~Indicator,
value.var = "Value",
fun.aggregate = max))
data2 <- data2[!is.na(data2$grsh_x),]
data2.x <- data2 %>% select(-grsh_x, WBCTRY) %>% as.matrix()
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY)) %>% as.matrix()
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x, y= data2.y)
View(data2.x)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY)) %>% as.matrix()
names(data2.x)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY))
names(data2.x)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% as.matrix()
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x, y= data2.y)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1))
data2.x
glmnet(x = data2.x, y= data2.y)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% as.matrix()
View(data2.x)
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY)) %>% as.matrix()
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% as.matrix()
str(data2.x)
glmnet(x = data2.x, y= data2.y, type = "multinomial")
data2.y
data2.x
glmnet(x = data2.x[,1:10], y= data2.y)
data2.y
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% data.matrix()
glmnet(x = data2.x[,1:10], y= data2.y)
glmnet(x = data2.x[,1:10], y= data2.y, normalize=FALSE)
for(i in 1:113){
if(is.finite(sd(data2.x))){
print(i)
}
}
for(i in 1:113){
if(is.finite(sd(data2.x[,i]))){
print(i)
}
}
for(i in 1:113){
if(is.na(sd(data2.x[,i]))){
print(i)
}
}
for(i in 1:113){
if(is.na(sd(data2.x[,i]))){
print(sd(data2.x[,i], na.rm = TRUE))
}
}
for(i in 1:113){
if(sd(data2.x[,i]) == 0)
}
for(i in 1:113){
if(sd(data2.x[,i]) == 0){
print(i)
}
}
for(i in 1:113){
if(sd(data2.x[,i], na.rm = TRUE) == 0){
print(i)
}
}
data2.x <- data2.x[,-90]
glmnet(x = data2.x[,1:10], y= data2.y, normalize=FALSE)
glmnet(x = data2.x[,1:10], y= data2.y)
for(i in 1:113){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1))
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
data2.x <- data2.x[,-90]
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1))
data2.x <- data2.x[,-90]
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1))
data2.x <- data2.x[,-90]
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
data2.x
data2.x <- data2.x[,-90]
data2 <- data2[!is.na(data2$grsh_x),]
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1))
data2.x <- data2.x[,-90]
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% as.matrix()
data2.x <- data2.x[,-90]
for(i in 1:112){
data2.x[,i] <- (data2.x[,i] - mean(data2.x[,i], na.rm = TRUE))/sd(data2.x[,i], na.rm = TRUE)
}
glmnet(x = data2.x[,1:10], y= data2.y)
glmnet(x = data2.x, y= data2.y)
glmnet(x = data2.x[,1:2], y= data2.y)
glmnet(x = data2.x[,1:2], y= data2.y, standardize = FALSE)
glmnet(x = data2.x, y= data2.y, standardize = FALSE)
glmnet(x = data2.x[,10:60], y= data2.y, standardize = FALSE)
glmnet(x = data2.x[,79], y= data2.y, standardize = FALSE)
glmnet(x = data2.x[,79:98], y= data2.y, standardize = FALSE)
View(data2.x)
data2 <- na.omit(data2)
#data2 <- data2[!is.na(data2$grsh_x),]
data2.x <- data2 %>% select(-c(grsh_x, WBCTRY, WBCTRY1)) %>% as.matrix()
data2.x <- data2.x[,-90]
data2.y <- data2 %>% pull(grsh_x)
glmnet(x = data2.x[,79:98], y= data2.y, standardize = FALSE)
data2.x
model2 <- glmnet(x = data2.x[,79:98], y= data2.y, standardize = FALSE)
summary(model2)
model2 <- cv.glmnet(x = data2.x[,79:98], y= data2.y, standardize = FALSE)
summary(model2)
model2$cvm
model2$lambda.min
model2
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:6,]
bestlam <- model2$lambda.min
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[]
lasso.coef
model2$name
model2$lambda
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:6,]
lasso.coef
model2 <- cv.glmnet(x = data2.x, y= data2.y, standardize = FALSE)
model2
model2
bestlam <- model2$lambda.min
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:6,]
lasso.coef
bestlam <- model2$lambda.min
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:6,]
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:30,]
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[,1:30]
lasso.coef  <- predict(model2, type = 'coefficients', s = bestlam)[1:30,]
predict(model2, type = 'coefficients', s = bestlam)
summary(model1)
stargazer(model1, model1, title="Regression Results",
dep.var.labels=c("Overall Rating","High Rating"),
covariate.labels=c("Handling of Complaints"),
omit.stat=c("LL","ser","f"),
ci=TRUE,
ci.level=0.95,
single.row=TRUE)
p1+geom_smooth(method = "lm")
p1 <- ggplot(data = data1, aes(x = G, y = g)) +
scale_y_continuous(labels = scales::percent) +
xlab("GDP per capita, 1980 (log)") +
ylab(TeX("Growth, $1980 \U2013 1984$")) +
geom_point()
p1+geom_smooth(method = "lm")
