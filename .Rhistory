y.pred = mean(y.pred),
y.max = max(y.pred),
y.min = min(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
#geom_line(aes(x = date, y = y.true, colour = "true")) +
#geom_line(aes(x = date, y = y.pred, colour = "pred"))+
geom_ribbon(aes(x = date, ymin = y.min, ymax = y.max, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon,date) %>%
summarise(y.true = mean(y.true),
y.pred = mean(y.pred),
y.max = max(y.pred),
y.min = min(y.pred)) %>%
print
lasso.out %>%
filter(horizon>10) %>%
print
lasso.out %>%
filter(horizon>10) %>%
View
lasso.out %>%
filter(horizon>10) %>%
View
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon,date) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
#geom_line(aes(x = date, y = y.true, colour = "true")) +
#geom_line(aes(x = date, y = y.pred, colour = "pred"))+
geom_ribbon(aes(x = date, y = y.true-y.pred, colour = "error"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon,date) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
#geom_line(aes(x = date, y = y.true, colour = "true")) +
#geom_line(aes(x = date, y = y.pred, colour = "pred"))+
geom_line(aes(x = date, y = y.true-y.pred, colour = "error"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon,date) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
#geom_line(aes(x = date, y = y.true, colour = "true")) +
#geom_line(aes(x = date, y = y.pred, colour = "pred"))+
geom_line(aes(x = date, y = y.true-y.pred, colour = "error"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon,date) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
View
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
View
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
#geom_line(aes(x = date, y = y.true, colour = "true")) +
#geom_line(aes(x = date, y = y.pred, colour = "pred"))+
geom_line(aes(x = date, y = y.true-y.pred, colour = "error"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
View
lasso.out %>%
select(date, y.true) %>%
unique %>%
summarise(SD = sd(y.true),
M = mean(y.true))
lasso.out %>%
select(date, y.pred) %>%
unique %>%
summarise(SD = sd(y.pred),
M = mean(y.pred))
sd(df_tf$CPI_M_CHI)
df_tf$CPI_M_CHI
sd(df_tf$UNEMPL_M_SH)
sd(df_tf$UNEMPL_M_SH, na.rm = TRUE)
str(df_tf)
df_tf
sd(df_tf$UNEMPL_M_SH, na.rm = TRUE)
autoplot(df_tf$UNEMPL_M_SH)
autoplot(df_tf$EMPLDEC_M)
autoplot(df_tf$CPI_M_CHI)
autoplot(df_tf$LIAB_B_M)
autoplot(df_tf$GKO_M)
get.panel.r <- function(df, window, horizon){
if(!"zoo" %in% class(df)){
stop("df must be 'zoo'")
}
# важно, что предсказываем мы следующее значение безработицы
df$UNEMPL_M_SH <- lag.xts(df$UNEMPL_M_SH, k = -1)
# удаляем крайние значения
df %<>% na.omit
dates <- time(df)
# преобразовываем данные
# (преобразуем здесь, а не внутри import.R, потому что, возможно, будем исследовать не только unemp)
y <- df$UNEMPL_M_SH %>% as.numeric()
X <- as.matrix(model.matrix(UNEMPL_M_SH~., data = df))
expand.grid(window = window, horizon = horizon) %>%
split(seq(nrow(.))) %>% map(function(x){
TS <- createTimeSlices(dates, initialWindow = x$window,
horizon = x$horizon,
fixedWindow = TRUE,
skip = FALSE)
# tc <- trainControl(index = TS$train, indexOut = TS$test)
# cv.out <- train(x=X,
#       y=y,
#       method = "glmnet",
#       metric = "RMSE",
#       trControl = tc,
#       tuneGrid = expand.grid(.alpha = 1,.lambda = seq(0.2,0.0001,length = 100)))
bestlam <- cv.out$bestTune$lambda
# assign("cv.out", cv.out, envir = globalenv())
# stop()
map2(TS$train, TS$test, function(tr, te){
# разбиваем выборку
X.train <- X[tr, ]
X.test <- X[te, ]
y.train <- y[tr]
y.test <- y[te]
m_lasso <- glmnet(X.train, y.train, alpha = 1, lambda = bestlam)
predict(m_lasso, type = "nonzero") %>% print
y.pred <- predict(m_lasso,newx = X.test)
tibble(pred.date = dates[last(tr)],# дата предсказания
date = dates[te],
model = "lasso",
lambda = bestlam,
window = x$window,
horizon = x$horizon,
y.true = y.test,
y.pred= y.pred[,1])
})
})
}
lasso.out <- get.panel.r(df_tf, 120, c(2:12))
lasso.out <- do.call(rbind, map(lasso.out, function(x){do.call(rbind,x)}))# %>% split(.$pred.date)
lasso.out %>%
select(date, y.pred) %>%
unique %>%
summarise(SD = sd(y.pred),
M = mean(y.pred))
lasso.out %>%
select(date, y.pred) %>%
unique %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
mutate(y.pred = scale(y.pred),
y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
# mutate(y.pred = scale(y.pred),
#        y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
lasso.out %>%
filter(horizon<10) %>%
group_by(horizon) %>%
# mutate(y.pred = scale(y.pred),
#        y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
#filter(horizon==3) %>%
group_by(window, horizon, model) %>%
mutate(y_true = cumsum(y.true)) %>%
mutate(y_pred = sapply(seq_along(horizon), function(h, horizon, y.true){
indx = h - horizon[h]
if(indx > 0)
y.true[indx]
else
NA
}, horizon = horizon, y.true = y.true) + y.pred) %>%
ggplot() +
geom_line(aes(x = date, y = y_true,colour = "true"))+
geom_line(aes(x = date, y =y_pred, colour = model)) +
facet_grid(rows = vars(horizon), cols = vars(window))
lasso.out %>%
filter(horizon>10) %>%
group_by(horizon) %>%
# mutate(y.pred = scale(y.pred),
#        y.true = scale(y.true)) %>%
ungroup() %>%
group_by(date, horizon) %>%
mutate(y.pred = mean(y.pred)) %>%
#dplyr::filter(date == max(date)) %>%
ungroup %>%
ggplot() +
geom_line(aes(x = date, y = y.true, colour = "true")) +
geom_line(aes(x = date, y = y.pred, colour = "pred"))+
facet_grid(rows = vars(horizon))
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
#filter(horizon==3) %>%
group_by(window, horizon, model) %>%
mutate(y_true = cumsum(y.true)) %>%
mutate(y_pred = sapply(seq_along(horizon), function(h, horizon, y.true){
indx = h - horizon[h]
if(indx > 0)
y.true[indx]
else
NA
}, horizon = horizon, y.true = y.true) + y.pred) %>%
ggplot() +
geom_line(aes(x = date, y = y_true,colour = "true"))+
geom_line(aes(x = date, y =y_pred, colour = model)) +
facet_grid(rows = vars(horizon), cols = vars(window))
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==3) %>%
group_by(window, horizon, model) %>%
mutate(y_true = cumsum(y.true)) %>%
mutate(y_pred = sapply(seq_along(horizon), function(h, horizon, y.true){
indx = h - horizon[h]
if(indx > 0)
y.true[indx]
else
NA
}, horizon = horizon, y.true = y.true) + y.pred) %>%
ggplot() +
geom_line(aes(x = date, y = y_true,colour = "true"))+
geom_line(aes(x = date, y =y_pred, colour = model)) +
facet_grid(rows = vars(horizon), cols = vars(window))
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, model) %>%
mutate(y_true = cumsum(y.true)) %>%
mutate(y_pred = sapply(seq_along(horizon), function(h, horizon, y.true){
indx = h - horizon[h]
if(indx > 0)
y.true[indx]
else
NA
}, horizon = horizon, y.true = y.true) + y.pred) %>%
ggplot() +
geom_line(aes(x = date, y = y_true,colour = "true"))+
geom_line(aes(x = date, y =y_pred, colour = model)) +
facet_grid(rows = vars(horizon), cols = vars(window))
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, pred.date) %>%
filter(date == max(date)) %>%
ungroup() %>%
group_by(window, horizon) %>%
mutate(y_true = cumsum(y.true)) %>%
mutate(y_pred = sapply(seq_along(horizon), function(h, horizon, y.true){
indx = h - horizon[h]
if(indx > 0)
y.true[indx]
else
NA
}, horizon = horizon, y.true = y.true) + y.pred) %>%
ggplot() +
geom_line(aes(x = date, y = y_true,colour = "true"))+
geom_line(aes(x = date, y =y_pred, colour = model)) +
facet_grid(rows = vars(horizon), cols = vars(window))
df_tf$UNEMPL_M_SH
df_tf$UNEMPL_M_SH %>% autoplot()
df_tf$UNEMPL_M_SH %>%cumsum %>% autoplot()
df_tf$UNEMPL_M_SH %>%cumsum(na.omit=TRUE) %>% autoplot()
df_tf$UNEMPL_M_SH%>%na.omit %>%cumsum %>% autoplot()
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, pred.date) %>%
dplyr::filter(date == max(date)) %>%
.$y.true %>%
autoplot
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, pred.date) %>%
dplyr::filter(date == max(date)) %>%
.$y.true %>%
plot
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, pred.date) %>%
dplyr::filter(date == max(date)) %>%
.$y.true %>%
plot("l")
# строим график в уровнях
lasso.out %>%
#filter(date>= start_date) %>%
filter(horizon==10) %>%
group_by(window, horizon, pred.date) %>%
dplyr::filter(date == max(date)) %>%
.$y.true %>%
plot(type="l")
lasso.out
lasso.out %>% group_by(pred_date, horizon) %>% summarise(rmse = RMSE(y.pred, y_true))
lasso.out %>% group_by(pred.date, horizon) %>% summarise(rmse = RMSE(y.pred, y_true))
lasso.out %>% group_by(pred.date, horizon) %>% summarise(rmse = RMSE(y.pred, y.true))
lasso.out %>% group_by(pred.date, horizon) %>% summarise(rmse = RMSE(y.pred, y.true)) %>%filter(horizon>9)%>% ggplot() + geom_line(aes(x = pred.date, y = rmse))+facet_grid(rows = vars(horizon))
lasso.out %>% group_by(date) %>% summarise(y.true = mean(y.true))
df_tf$UNEMPL_M_SH
df_tf$UNEMPL_M_SH %>% sumsum
df_tf$UNEMPL_M_SH %>% cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>%cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>% log %>% cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>% exp %>% cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>% exp
df_tf$UNEMPL_M_SH %>% na.omit %>% cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>% cumsum %>% cumsum
df_tf$UNEMPL_M_SH %>% na.omit %>% cumsum
df_tf_type
load("rawdata_panel.RData")
df$UNEMPL_M_SH
df_tf$UNEMPL_M_SH
rm(list = ls())
load("rawdata_panel.RData")
df
str(df)
# Трансформируем ряды (приведём к стационарном виду). Это делать не обязательно, поэтому позднее для
# некоторых моделей попробуем не использовать трансформацию
# ряд GKO_M имеет пропуск
df$GKO_M <- na.locf(df$GKO_M)
get.stationary.panel <- function(df){
dates <- time(df)
result <- df %>%
na.omit %>%
as.xts %>%
as.list %>%
imap(function(x,i){
x_dec <- decompose(x)
x <- x_dec$x - x_dec$seasonal
# проводим adf test для
# проводим adf test для простой разности
d0 <- adf.test(x) %>% .$p.value
if(d0<=0.05){
type <-  "d0"
x_stat <- x
} else{
d1 <- adf.test(diff.xts(x) %>% na.omit) %>% .$p.value
if(d1<=0.05){
type <-  "d1"
x_stat <- diff.xts(x)
} else{
log_d1 <- 1
try({
log_d1 <- adf.test(diff.xts(log(x)) %>% na.omit) %>% .$p.value
})
if(log_d1<=0.05){
type <- "log_d1"
x_stat <- diff.xts(log(x))
} else{
d2 <- adf.test(diff.xts(x, differences = 2) %>% na.omit) %>% .$p.value
if(d2<=0.05){
type <- "d2"
x_stat <- diff.xts(diff.xts(x))
} else{
# сообщений нет
message(i)
message(min(c(d0, d1, log_d1, d2)))
x_stat = x
}
}
}
}
list(typedf = data.frame(tsname = i, type = type, stringsAsFactors = FALSE),
statdf = data.frame(x_stat, stringsAsFactors = FALSE) %>% set_names(i))
})
statdf <- result %>% map_dfc(function(x){
x$statdf
}) %>% as.zoo(order.by = dates)
typedf <- result %>% map_dfr(function(x){
x$typedf
})
list(df = statdf, type = typedf)
}
# получаем транcформированные ряды
df_tf <- get.stationary.panel(df)$df
df_tf
df$UNEMPL_M_SH
# данные о типе трансформации
df_tf_type <- get.stationary.panel(df)$type
df_tf_type
diff.xts(df$UNEMPL_M_SH)
qplot(cumsum(df_tf$UNEMPL_M_SH), df$UNEMPL_M_SH)
qplot(cumsum(df_tf$UNEMPL_M_SH %>% na.omit), df$UNEMPL_M_SH)
qplot(cumsum(df_tf$UNEMPL_M_SH %>% na.omit), df$UNEMPL_M_SH[1:183])
qplot(cumsum(df_tf$UNEMPL_M_SH %>% na.omit)[1:183], df$UNEMPL_M_SH[1:183])
cumsum(df_tf$UNEMPL_M_SH %>% na.omit)
cumsum(df_tf$UNEMPL_M_SH %>% na.omit) %>% str
df$UNEMPL_M_SH
df$UNEMPL_M_SH %>% str
cumsum(df_tf$UNEMPL_M_SH %>% na.omit) %>% str
autoplot(df$UNEMPL_M_SH)
autoplot(cumsum(df_tf$UNEMPL_M_SH %>% na.omit))
